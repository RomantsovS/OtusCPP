name: CppCI

on:
  push:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
      
    - name: Configure CMake
      run: |
        pwd
        ls
        cd 01_Github_actions
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DPATCH_VERSION=${{ github.run_number }} -DWITH_BOOST_TEST=ON

    - name: Build
      run: |
        pwd
        ls
        cd 01_Github_actions
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
    
    - name: zip linux artifact
      run: |
        zip -r linux ${{github.workspace}}/build/helloworld_cli
    - name: upload linux artifact
      uses: actions/upload-artifact@v1
      with:
        name: uploads
        path: linux.zip
      
    - name: Package
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target package
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.ref }}
        body: |
          release body
        draft: false
        prerelease: false
    
    - name: download artifacts
      uses: actions/download-artifact@v1
      with:
        name: uploads
    
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}/build/helloworld-0.0.${{ github.run_number }}-Linux.deb
        asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
        asset_content_type: application/vnd.debian.binary-package

  build-win:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
      
    - name: Configure CMake
      run: |
        pwd
        ls
        cd 01_Github_actions
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DPATCH_VERSION=${{ github.run_number }} -DWITH_BOOST_TEST=OFF

    - name: Build
      run: |
        pwd
        ls
        cd 01_Github_actions
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
      
    - name: zip win artifact
      run: |
        powershell Compress-Archive ${{github.workspace}}/build/${{env.BUILD_TYPE}}/helloworld_cli.exe windows.zip 
    - name: upload windows artifact
      uses: actions/upload-artifact@v1
      with:
        name: uploads
        path: windows.zip
        
    - name: upload windows
      id: upload-windows
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/windows.zip
        asset_name: windows.zip
        asset_content_type: application/zip
